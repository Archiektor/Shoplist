{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/list-item/index.js","components/list-item/list-item.js","components/favorite-list/index.js","components/favorite-list/favorite-list.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/item-modify-form/index.js","components/item-modify-form/item-modify-form.js","components/counter/index.js","components/counter/counter.js","components/pretty-list/index.js","components/pretty-list/pretty-list.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","className","ListItem","label","onFavoriteClicked","onFavoriteClicked2","modifiedLabel","value","charAt","toUpperCase","slice","type","onClick","FavoriteList","arr","data","onItemDelete","onItemEdit","elements","map","element","id","elemProps","key","ItemAddForm","state","product","onLabelChange","e","setState","target","submitForm","preventDefault","props","onItemAdd","onSubmit","this","placeholder","onChange","Component","ItemModifyForm","onItemModify","Counter","countItems","filter","el","done","length","completed","toDo","PrettyList","onItemClick","App","idGenerator","Number","Math","ceil","random","createProductItem","nameOfProduct","favoriteList","isModified","modProdId","isPrettyMode","onItemAdded","receivedData","newProduct","splitArray","selectedId","index","findIndex","onItemDeleted","result","onItemEdited","onItemModified","productName","modifiedProduct","makePrettier","toggleProperty","propName","item","oldItem","newItem","console","log","onItemClicked","ReactDom","render","document","querySelector"],"mappings":"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","file":"static/js/main.ea964216.chunk.js","sourcesContent":["import AppHeader from './app-header';\r\n\r\nexport default AppHeader;","import React from \"react\";\r\nimport './app-header.css'\r\n\r\nconst AppHeader = () => {\r\n    // # phantom render(){\r\n    return (\r\n        <div className=\"app-header\">\r\n            <h1>\r\n                ShopList App\r\n            </h1>\r\n            <p>Form whatever you need in a shoplist below.</p>\r\n        </div>\r\n    )\r\n    //}\r\n};\r\n\r\nexport default AppHeader;","import ListItem from './list-item';\r\n\r\nexport default ListItem;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './list-item.css';\r\n\r\nconst ListItem = ({label, onFavoriteClicked,onFavoriteClicked2}) => {\r\n\r\n    const preLabel = '////';\r\n    const modifiedLabel = `${label.value.charAt(0).toUpperCase()}${label.value.slice(1)}`;\r\n\r\n    return (\r\n        <span className=\"shoplist-main-span\">\r\n            <span className=\"shoplist-item-pre\">{preLabel}</span>\r\n            <span\r\n                className=\"shoplist-item-label\">\r\n          {modifiedLabel}\r\n            </span>\r\n          <button type=\"button\" className=\"trash btn btn-outline-danger btn-lg float-right\" onClick={onFavoriteClicked}>\r\n            <i className=\"fa fa-trash-o\"/>\r\n          </button>\r\n            <button type=\"button\" className=\"edit btn btn-outline-success btn-lg float-right\" onClick={onFavoriteClicked2}>\r\n            <i className=\"fa fa-pencil\"/>\r\n          </button>\r\n    </span>\r\n    );\r\n};\r\n\r\nListItem.propTypes = {\r\n    label: PropTypes.shape({\r\n        value: PropTypes.string\r\n    })\r\n};\r\n\r\nexport default ListItem;","import FavoriteList from './favorite-list.js';\r\n\r\nexport default FavoriteList;","import React from \"react\";\r\nimport ListItem from '../list-item/index';\r\nimport PropTypes from 'prop-types';\r\nimport './favorite-list.css';\r\n\r\nconst FavoriteList = ({data: arr, onItemDelete, onItemEdit}) => {\r\n\r\n    const elements = arr.map((element) => {\r\n        const {id, ...elemProps} = element;\r\n        return (\r\n            <li key={id} className=\"list-group-item\"><ListItem label={elemProps}\r\n                                                               onFavoriteClicked={() => {onItemDelete(id)}}\r\n                                                               onFavoriteClicked2={() => {onItemEdit(id)}}\r\n            /></li>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <div className=\"favorite-block\">\r\n            <ul className=\"shoplist-list list-group\">\r\n                {elements}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nFavoriteList.propTypes = {\r\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    onItemDelete: PropTypes.func.isRequired\r\n};\r\n\r\nexport default FavoriteList;","import ItemAddForm from \"./item-add-form\";\r\n\r\nexport default ItemAddForm;","import React, {Component} from \"react\";\r\nimport './item-add-form.css';\r\n\r\nexport default class ItemAddForm extends Component {\r\n\r\n    state = {\r\n        product: ''\r\n    };\r\n\r\n    // # When you tap letters in input, you've got a result\r\n    onLabelChange = (e) => {\r\n        this.setState({\r\n            product: e.target.value\r\n        });\r\n    };\r\n\r\n    // # When you submit form, action is happen\r\n    submitForm = (e) => {\r\n        e.preventDefault();\r\n        this.props.onItemAdd(this.state.product);\r\n        this.setState({\r\n            product: ''\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form className='item-add-form d-flex' onSubmit={this.submitForm}>\r\n                <input type=\"text\" placeholder='Add your favorite product here' className='form-control item-add-input'\r\n                       onChange={this.onLabelChange} value={this.state.product}/>\r\n                <button className='btn btn-outline-secondary item-add-btn'>Add Item</button>\r\n            </form>\r\n        )\r\n    }\r\n};","import ItemModifyForm from './item-modify-form'\r\n\r\nexport default ItemModifyForm;","import React, {Component} from \"react\";\r\nimport './item-modify-form.css';\r\n\r\nexport default class ItemModifyForm extends Component {\r\n\r\n    state = {\r\n        product: ''\r\n    };\r\n\r\n    // # When you tap letters in input, you've got a result\r\n    onLabelChange = (e) => {\r\n        this.setState({\r\n            product: e.target.value\r\n        });\r\n    };\r\n\r\n    // # When you submit form, action is happen\r\n    submitForm = (e) => {\r\n        e.preventDefault();\r\n        this.props.onItemModify(this.state.product);\r\n        this.setState({\r\n            product: ''\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form className='item-modify-form d-flex' onSubmit={this.submitForm}>\r\n                <input type=\"text\" placeholder='Change your favorite product here' className='form-control'\r\n                       onChange={this.onLabelChange} value={this.state.product}/>\r\n                <button className='btn btn-outline-secondary item-modify-btn'>Modify Item</button>\r\n            </form>\r\n        )\r\n    }\r\n};","import Counter from './counter';\r\n\r\nexport default Counter;","import React, {Component} from \"react\";\r\n\r\nimport './counter.css';\r\n\r\nexport default class Counter extends Component {\r\n\r\n    countItems = (arr) => {\r\n        return (arr.filter(el => el.done === true).length);\r\n    };\r\n\r\n    render() {\r\n        const {data} = this.props;\r\n        const completed = this.countItems(data);\r\n        let done = `Done : ${completed}`;\r\n        let toDo = `Items to buy : ${data.length - completed}`;\r\n\r\n        return (<div className=\"counter-block\">\r\n            <span className=\"counter-item\">{toDo}</span>\r\n            <span className=\"counter-item\">{done}</span>\r\n        </div>);\r\n    }\r\n};\r\n","import PrettyList from './pretty-list';\r\n\r\nexport default PrettyList;","import React from \"react\";\r\n\r\nimport './pretty-list.css';\r\nimport PropTypes from \"prop-types\";\r\nimport Counter from \"../counter\";\r\n\r\nconst PrettyList = ({data, onItemClick}) => {\r\n\r\n    const elements = data.map((element) => {\r\n        const {id, ...elemProps} = element;\r\n        let className = \"pretty-item list-group-item\";\r\n        if (elemProps.done === true) {\r\n            className += \" done\";\r\n            return <li key={id} className={className} onClick={() => onItemClick(id)}>{elemProps.value}</li>;\r\n        }\r\n        return (<li key={id} className={className} onClick={() => onItemClick(id)}>{elemProps.value}</li>)\r\n    });\r\n\r\n    return (\r\n        <div className=\"pretty-block\">\r\n            <Counter data={data}/>\r\n            <ul className=\"pretty-list list-group\">\r\n                {elements}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nPrettyList.propTypes = {\r\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nexport default PrettyList;","import App from \"./app\";\r\n\r\nexport default App;","import React, {Component} from \"react\";\r\n\r\nimport AppHeader from '../app-header';\r\nimport FavoriteList from \"../favorite-list\";\r\nimport ItemAddForm from \"../item-add-form\";\r\nimport './app.css';\r\nimport ItemModifyForm from \"../item-modify-form\";\r\nimport PrettyList from \"../pretty-list\";\r\n\r\nexport default class App extends Component {\r\n\r\n    idGenerator = () => {\r\n        return Number(Math.ceil(Math.random() * 10) * Math.ceil(Math.random() * 10)\r\n            + '' + Math.ceil(Math.random() * 10) + '' + Math.ceil(Math.random() * 10));\r\n    };\r\n\r\n    createProductItem = (nameOfProduct) => {\r\n        return {\r\n            id: this.idGenerator(),\r\n            value: nameOfProduct,\r\n            done: false\r\n        }\r\n    };\r\n\r\n    state = {\r\n        favoriteList: [\r\n            this.createProductItem('milk'),\r\n            this.createProductItem('sausage'),\r\n            this.createProductItem('someFruit'),\r\n            this.createProductItem('someWater'),\r\n            this.createProductItem('eggs'),\r\n            this.createProductItem('cookies'),\r\n        ],\r\n        isModified: false,\r\n        modProdId: 999,\r\n        isPrettyMode: false\r\n    };\r\n\r\n    onItemAdded = (receivedData) => {\r\n        this.setState(({favoriteList}) => {\r\n            const newProduct = this.createProductItem(receivedData);\r\n            const newArr = [...favoriteList, newProduct];\r\n            return {\r\n                favoriteList: newArr\r\n            };\r\n        })\r\n    };\r\n\r\n    splitArray = (arr, selectedId) => {\r\n        const index = arr.findIndex((element) => element.id === selectedId);\r\n        const firstHalfOfArr = arr.slice(0, index);\r\n        const secondHalfOfArr = arr.slice(index + 1);\r\n        return [firstHalfOfArr, secondHalfOfArr];\r\n    };\r\n\r\n    onItemDeleted = (selectedId) => {\r\n        this.setState(({favoriteList}) => {\r\n            const result = this.splitArray(favoriteList, selectedId);\r\n            return {\r\n                favoriteList: [...result[0], ...result[1]]\r\n            }\r\n        })\r\n    };\r\n\r\n    onItemEdited = (selectedId) => {\r\n        this.setState({\r\n            isModified: true,\r\n            modProdId: selectedId\r\n        })\r\n    };\r\n\r\n    onItemModified = (productName) => {\r\n        this.setState(({favoriteList, modProdId}) => {\r\n            const result = this.splitArray(favoriteList, modProdId);\r\n            const modifiedProduct = this.createProductItem(productName);\r\n            return {\r\n                favoriteList: [...result[0], modifiedProduct, ...result[1]],\r\n                isModified: false,\r\n                modProdId: 999\r\n            }\r\n        })\r\n    };\r\n\r\n    makePrettier = () => {\r\n        this.setState({\r\n            isPrettyMode: true\r\n        })\r\n    };\r\n\r\n    toggleProperty = (arr, id, propName) => {\r\n        const index = arr.findIndex((item) => item.id === id);\r\n        const oldItem = arr[index];\r\n        const newItem = {...oldItem, [propName]: !oldItem[propName]};\r\n        console.log('Done item', newItem);\r\n        return newItem;\r\n    };\r\n\r\n    onItemClicked = (selectedId) => {\r\n        this.setState(({favoriteList}) => {\r\n            const newItem = this.toggleProperty(favoriteList, selectedId, 'done');\r\n            const result = this.splitArray(favoriteList, selectedId);\r\n            return {\r\n                favoriteList: [...result[0], newItem, ...result[1]]\r\n            }\r\n\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const {favoriteList, isModified} = this.state;\r\n\r\n        if (isModified) {\r\n            return (\r\n                <div className=\"shoplist-app\">\r\n                    <AppHeader/>\r\n                    <ItemModifyForm onItemModify={this.onItemModified}/>\r\n                </div>\r\n            )\r\n        }\r\n        if (!this.state.isPrettyMode) {\r\n            return (\r\n                <div className=\"shoplist-app\">\r\n                    <AppHeader/>\r\n                    <FavoriteList data={favoriteList} onItemDelete={this.onItemDeleted} onItemEdit={this.onItemEdited}/>\r\n                    <ItemAddForm onItemAdd={this.onItemAdded}/>\r\n                    <button className=\"btn btn-info btn-lg btn-block app-btn\" onClick={this.makePrettier}>Go shopping !\r\n                    </button>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"shoplist-app\">\r\n                    <AppHeader/>\r\n                    <PrettyList data={favoriteList} onItemClick={this.onItemClicked}/>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react';\nimport ReactDom from 'react-dom';\n//UI - elements\nimport App from './components/app'\n\nReactDom.render(<App/>, document.querySelector('#root'));\n"],"sourceRoot":""}